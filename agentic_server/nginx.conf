# Nginx reverse proxy configuration for Agentic Commerce Server
# Provides TLS termination and request forwarding

upstream agentic_commerce {
    server 127.0.0.1:8080;
    # For multiple instances, add:
    # server 127.0.0.1:8081;
    # server 127.0.0.1:8082;
}

# HTTP -> HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name checkout.merchant.com;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name checkout.merchant.com;

    # TLS configuration
    ssl_certificate /etc/ssl/certs/checkout.crt;
    ssl_certificate_key /etc/ssl/private/checkout.key;
    
    # Modern TLS only
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (optional but recommended)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Request size limits
    client_max_body_size 1M;
    client_body_buffer_size 128k;

    # Timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 30s;

    # Logging
    access_log /var/log/nginx/agentic-commerce-access.log combined;
    error_log /var/log/nginx/agentic-commerce-error.log warn;

    # Health check (bypass rate limiting)
    location = /health {
        proxy_pass http://agentic_commerce;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # Metrics endpoint (restrict access)
    location = /metrics {
        # Restrict to internal IPs only
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://agentic_commerce;
        proxy_set_header Host $host;
    }

    # Main application
    location / {
        # Rate limiting (optional, handled by app)
        # limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://agentic_commerce;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Forward all original headers
        proxy_pass_request_headers on;
        
        # WebSocket support (future)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# Rate limiting zone (optional)
# limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m; 